{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["StyledTodo","styled","div","ItemTodo","motion","li","CloseButton","button","Todo","state","value","todoList","localStorage","getItem","JSON","parse","id","text","done","idCount","parseInt","handleSubmit","e","preventDefault","console","log","setState","setItem","stringify","handleChange","target","deleteItem","stopPropagation","selectedItem","split","noItem","filter","i","listClick","newList","map","item","toString","updatedItem","todolist","this","index","initial","opacity","animate","onClick","style","display","marginTop","className","onSubmit","type","name","onChange","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31a76648.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FormEvent } from \"react\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\n\nconst StyledTodo = styled.div`\n  font-size: 30px;\n  text-align: center;\n  padding: 60px;\n\n  input {\n    height: 50px;\n    width: 99%;\n    margin-top: 30px;\n    font-size: 30px;\n\n  }\n\n  ul {\n    list-style: none;\n    width: 100%;\n    margin-block-end: 0em;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    padding-inline-start: 0px;\n  }\n  h1 {\n    color: white;\n  }\n  @media all and (max-width: 480px) { \n  padding: 20px;\n  ul {\n    margin: 10px;\n    padding:10px;\n    margin-block-start: 0em;\n    margin-block-end: 0em;\n    margin-inline-start: 0px;\n    margin-inline-end: 0px;\n    padding-inline-start: 0px;\n  }\n  input {\n    width: 90%;\n    padding: 10px;\n  }\n  }\n \n`;\n\nconst ItemTodo = styled(motion.li)`\n  position: relative;\n  text-align: center;\n  display: flex;\n  background-color: #edddd4;\n  border: 1px solid #351e29;\n  min-height: 80px;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n  overflow-x: hidden;\n\n\n  @media all and (max-width: 480px) {\n    width: 100%;\n    padding: 0px;\n    font-size: 20px;\n  }\n`;\n\nconst CloseButton = styled(motion.button)`\n  background-color: #c44536;\n  position: absolute;\n  right: 0px;\n  width: 50px;\n  height: 100%;\n  color: white;\n  border: none;\n  margin-left: 2px;\n`;\n\ninterface Props {}\ninterface State {\n  value: string;\n  todoList: { id: number; text: string; done: boolean }[];\n  idCount: number;\n}\nexport default class Todo extends Component<Props, State> {\n  state = {\n    value: \"\",\n    todoList: localStorage.getItem(\"todoList\")\n      ? JSON.parse(localStorage.getItem(\"todoList\") as string)\n      : [\n          { id: 1, text: \"wash my face\", done: false },\n          { id: 2, text: \"clean my room\", done: false },\n          { id: 3, text: \"check my message\", done: false },\n        ],\n    idCount: localStorage.getItem(\"todoListCount\")\n    ? parseInt(localStorage.getItem(\"todoListCount\") as string)\n    :3\n  };\n\n  handleSubmit = (e: FormEvent) => {\n    e.preventDefault();\n    console.log(this.state);\n    this.setState(\n      {\n        value: \"\",\n        todoList: [\n          ...this.state.todoList,\n          { id: this.state.idCount + 1, text: this.state.value, done: false },\n        ],\n        idCount: this.state.idCount + 1,\n      },\n      () => {\n        console.log(this.state);\n        localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList));\n        localStorage.setItem(\"todoListCount\", JSON.stringify(this.state.idCount));\n        console.log(JSON.parse(localStorage.getItem(\"todoList\") as string));\n      }\n    );\n  };\n  handleChange = (e: FormEvent) => {\n    this.setState({\n      value: (e.target as HTMLInputElement).value,\n    });\n  };\n  deleteItem = (e: FormEvent) => {\n    console.log(\"deletingitem\");\n\n    e.preventDefault();\n    e.stopPropagation();\n    let selectedItem = (e.target as HTMLSpanElement).id.split(\"-\")[1];\n\n    let noItem = this.state.todoList.filter(\n      (i: { [key: string]: any }) => i.id !== parseInt(selectedItem)\n    );\n    console.log(noItem);\n    this.setState({ todoList: noItem }, () => {\n      console.log(this.state);\n      localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList));\n      console.log(JSON.parse(localStorage.getItem(\"todoList\") as string));\n    });\n  };\n  listClick = (e: React.MouseEvent<HTMLLIElement>) => {\n    console.log(\"running listclick\");\n\n    e.preventDefault();\n    console.log(e.target, this.state);\n    let selectedItem = (e.target as HTMLLIElement).id;\n\n    const newList = this.state.todoList.map((item: { [key: string]: any }) => {\n      if (item.id.toString() === selectedItem) {\n        console.log(item.id, selectedItem);\n        const updatedItem = {\n          ...item,\n          done: !item.done,\n        };\n        console.log(updatedItem);\n        return updatedItem;\n      }\n      console.log(item);\n      return item;\n    });\n    this.setState({ ...this.state, todoList: newList }, () => {\n      localStorage.setItem(\"todoList\", JSON.stringify(this.state.todoList));\n    });\n    /*    var result = this.state.todoList.filter((obj) => {\n      \n      return obj.id === 1;\n    }); */\n  };\n  render() {\n    let todolist;\n    if (this.state.todoList) {\n      todolist = this.state.todoList.map(\n        (i: { [key: string]: any }, index: number) => {\n          if (i.done) {\n            return (\n              <ItemTodo\n                initial={{ opacity: 1 }}\n                animate={{ opacity: 0.1 }}\n                key={index}\n                onClick={this.listClick}\n                id={i.id.toString()}\n                style={{ display: \"flex\", marginTop: 5 }}\n              >\n                {i.text}\n                <CloseButton\n                  key={index + \"-button\"}\n                  onClick={this.deleteItem}\n                  id={\"button-\" + i.id.toString()}\n                >\n                  {\" \"}\n                  &times;{\" \"}\n                </CloseButton>\n              </ItemTodo>\n            );\n          } else {\n            return (\n              <ItemTodo\n                initial={{ opacity: 0.1 }}\n                animate={{ opacity: 1 }}\n                key={index}\n                onClick={this.listClick}\n                id={i.id.toString()}\n                style={{ display: \"flex\", marginTop: 5 }}\n              >\n                {i.text}\n                <CloseButton\n                  key={index + \"button\"}\n                  id={\"button-\" + i.id.toString()}\n                  onClick={this.deleteItem}\n                >\n                  {\" \"}\n                  &times;{\" \"}\n                </CloseButton>\n              </ItemTodo>\n            );\n          }\n        }\n      );\n    } else {\n      todolist = null;\n    }\n\n    return (\n      <StyledTodo>\n        <div className=\"container\">\n          <h1>To Do List</h1>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              onSubmit={this.handleSubmit}\n              type=\"text\"\n              name=\"text-box\"\n              id=\"text-box\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              placeholder=\"&#x270F;\"\n            />\n          </form>\n          <ul>{todolist}</ul>\n        </div>\n      </StyledTodo>\n    );\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./index.css\"\nimport Todo from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}